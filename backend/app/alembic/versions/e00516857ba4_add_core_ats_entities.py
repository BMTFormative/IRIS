"""Add core ATS entities

Revision ID: e00516857ba4
Revises: 
Create Date: 2025-08-12 12:56:58.299925

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'e00516857ba4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('candidate',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('current_title', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('current_company', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('linkedin_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('portfolio_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('years_experience', sa.Integer(), nullable=True),
    sa.Column('skills', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('emails', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phones', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('source', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('tags', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('external_id', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('search_vector', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_candidate_email'), 'candidate', ['email'], unique=True)
    op.create_index(op.f('ix_candidate_first_name'), 'candidate', ['first_name'], unique=False)
    op.create_index(op.f('ix_candidate_last_name'), 'candidate', ['last_name'], unique=False)
    op.create_table('integrationmetadata',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('entity_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('entity_id', sa.Uuid(), nullable=False),
    sa.Column('integration_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('external_id', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('external_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('last_synced_at', sa.DateTime(), nullable=True),
    sa.Column('sync_status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('sync_error', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('field_mappings', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('extra_data', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_integrationmetadata_entity_id'), 'integrationmetadata', ['entity_id'], unique=False)
    op.create_index(op.f('ix_integrationmetadata_entity_type'), 'integrationmetadata', ['entity_type'], unique=False)
    op.create_index(op.f('ix_integrationmetadata_external_id'), 'integrationmetadata', ['external_id'], unique=False)
    op.create_index(op.f('ix_integrationmetadata_integration_name'), 'integrationmetadata', ['integration_name'], unique=False)
    op.create_table('job',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('department', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('job_number', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'PUBLISHED', 'CLOSED', 'ARCHIVED', name='jobstatus'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='prioritylevel'), nullable=False),
    sa.Column('salary_min', sa.Integer(), nullable=True),
    sa.Column('salary_max', sa.Integer(), nullable=True),
    sa.Column('employment_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('remote_allowed', sa.Boolean(), nullable=False),
    sa.Column('experience_required', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('required_skills', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('preferred_skills', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tags', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('external_id', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_job_job_number'), 'job', ['job_number'], unique=True)
    op.create_index(op.f('ix_job_status'), 'job', ['status'], unique=False)
    op.create_index(op.f('ix_job_title'), 'job', ['title'], unique=False)
    op.create_table('user',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('application',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('job_id', sa.Uuid(), nullable=False),
    sa.Column('candidate_id', sa.Uuid(), nullable=False),
    sa.Column('status', sa.Enum('APPLIED', 'SCREENING', 'INTERVIEW', 'OFFER', 'HIRED', 'REJECTED', 'WITHDRAWN', name='applicationstatus'), nullable=False),
    sa.Column('source', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('applied_at', sa.DateTime(), nullable=False),
    sa.Column('stage_changed_at', sa.DateTime(), nullable=True),
    sa.Column('resume_score', sa.Float(), nullable=True),
    sa.Column('interview_score', sa.Float(), nullable=True),
    sa.Column('overall_score', sa.Float(), nullable=True),
    sa.Column('cover_letter', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('application_answers', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('external_id', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidate.id'], ),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_application_candidate_id'), 'application', ['candidate_id'], unique=False)
    op.create_index(op.f('ix_application_job_id'), 'application', ['job_id'], unique=False)
    op.create_index(op.f('ix_application_status'), 'application', ['status'], unique=False)
    op.create_table('auditlog',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('entity_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('entity_id', sa.Uuid(), nullable=False),
    sa.Column('action', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('changes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('old_values', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('new_values', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_auditlog_entity_id'), 'auditlog', ['entity_id'], unique=False)
    op.create_index(op.f('ix_auditlog_entity_type'), 'auditlog', ['entity_type'], unique=False)
    op.create_table('item',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attachment',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('original_filename', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('entity_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('entity_id', sa.Uuid(), nullable=False),
    sa.Column('extracted_text', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('processing_status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('candidate_id', sa.Uuid(), nullable=True),
    sa.Column('application_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['application.id'], ),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidate.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attachment_entity_id'), 'attachment', ['entity_id'], unique=False)
    op.create_table('interview',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('application_id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('interview_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('scheduled_at', sa.DateTime(), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('interviewer_emails', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('feedback', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('calendar_event_id', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('meeting_link', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['application.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interview_application_id'), 'interview', ['application_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_interview_application_id'), table_name='interview')
    op.drop_table('interview')
    op.drop_index(op.f('ix_attachment_entity_id'), table_name='attachment')
    op.drop_table('attachment')
    op.drop_table('item')
    op.drop_index(op.f('ix_auditlog_entity_type'), table_name='auditlog')
    op.drop_index(op.f('ix_auditlog_entity_id'), table_name='auditlog')
    op.drop_table('auditlog')
    op.drop_index(op.f('ix_application_status'), table_name='application')
    op.drop_index(op.f('ix_application_job_id'), table_name='application')
    op.drop_index(op.f('ix_application_candidate_id'), table_name='application')
    op.drop_table('application')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_job_title'), table_name='job')
    op.drop_index(op.f('ix_job_status'), table_name='job')
    op.drop_index(op.f('ix_job_job_number'), table_name='job')
    op.drop_table('job')
    op.drop_index(op.f('ix_integrationmetadata_integration_name'), table_name='integrationmetadata')
    op.drop_index(op.f('ix_integrationmetadata_external_id'), table_name='integrationmetadata')
    op.drop_index(op.f('ix_integrationmetadata_entity_type'), table_name='integrationmetadata')
    op.drop_index(op.f('ix_integrationmetadata_entity_id'), table_name='integrationmetadata')
    op.drop_table('integrationmetadata')
    op.drop_index(op.f('ix_candidate_last_name'), table_name='candidate')
    op.drop_index(op.f('ix_candidate_first_name'), table_name='candidate')
    op.drop_index(op.f('ix_candidate_email'), table_name='candidate')
    op.drop_table('candidate')
    # ### end Alembic commands ###
